name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  zig-cross:
    name: Linux Cross Build - ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install Zig and cargo-zigbuild
        run: |
          curl -L https://ziglang.org/builds/zig-linux-x86_64-0.15.0-dev.382+6a7ca4b8b.tar.xz | tar -xJ
          ZIG_DIR=$(find . -maxdepth 1 -type d -name "zig-linux-x86_64*" | head -n 1)
          echo "$PWD/$ZIG_DIR" >> $GITHUB_PATH
          cargo install cargo-zigbuild

      - name: Confirm Zig version
        run: zig version

      - name: Build with cargo-zigbuild
        run: cargo zigbuild --release --target=${{ matrix.target }}

      - name: Run tests (only on native linux)
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: cargo test --release

  windows:
    name: Windows x86_64-pc-windows-msvc
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup default stable

      - name: Add Windows target
        run: rustup target add x86_64-pc-windows-msvc

      - name: Build
        run: cargo build --release

      - name: Test
        run: cargo test --release

  macos:
    name: macOS-arm64
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: cargo build --release

      - name: Test
        run: cargo test --release

  ios:
    name: iOS-arm64
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - name: Add iOS target
        run: rustup target add aarch64-apple-ios

      - name: Install cargo-lipo
        run: cargo install cargo-lipo

      - name: Build staticlib for iOS
        run: cargo lipo --release --targets=aarch64-apple-ios

  android:
    name: Android NDK Build - ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [armv7-linux-androideabi, aarch64-linux-android, x86_64-linux-android]

    steps:
      - uses: actions/checkout@v4

      - name: Add Android target
        run: rustup target add ${{ matrix.target }}

      - name: Install NDK + cargo-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25b
          add-to-path: true

      - name: Install cargo-ndk
        run: cargo install cargo-ndk

      - name: Build
        run: cargo ndk -t ${{ matrix.target }} -o ./target build --release
